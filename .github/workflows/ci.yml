name: CI

on:
  schedule:
    - cron: '0 10 * * *' # everyday at 10am
  push:
    branches:
      - main
      - develop
    tags:
      - '*.*.*'
  pull_request:

env:
  node_version: 14.x
  # github.event.repository.clone_url not available for on: schedule
  clone_url: https://github.com/Sage-Bionetworks/sage-angular.git
  gh_pages_url: https://sage-bionetworks.github.io/sage-angular
  # github.event.repository.default_branch not available for on: schedule
  default_branch: main

jobs:
  configure:
    runs-on: ubuntu-latest
    steps:
    - name: Create configuration
      run: |
        version=noop
        push=false
        push_doc=false
        if [ "${{ github.event_name }}" = "schedule" ]; then
          version=nightly
          push_doc=true
        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          version=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          version=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          if [ "${{ github.event.repository.default_branch }}" = "$version" ]; then
            version=edge
            push_doc=true
          fi
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          version=pr-${{ github.event.number }}
        fi
        tags="${version}"
        if [[ $version =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          tags="$tags,latest"
          push_doc=true
          push_package=true
        fi
        printf "%s\n" \
          "version=${version}" \
          "tags=${tags}" \
          "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
          "push=${push}" \
          "push_doc=${push_doc}" | tee -a .github_env

    - name: Upload .github_env
      uses: actions/upload-artifact@v2
      with:
        name: GITHUB_ENV
        path: .github_env

  test:
    needs: [configure]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [12, 14]
    name: test (node-${{ matrix.node_version }})
    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Setup Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node_version }}

    # - name: Install system dependencies
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y libgbm-dev

    - name: Install npm dependencies
      run: npm ci

    # - run: npm run test:ci

    # - name: Run unit tests
    #   run: npm run test
    # - name: Run e2e tests
    #   run: npm run e2e

  buld-and-publish-package:
    needs: [test]
    runs-on: ubuntu-latest
    if: env.push == 'true'
    steps:
    - uses: actions/checkout@v2

    - name: Download .github_env
      uses: actions/download-artifact@v2
      with:
        name: GITHUB_ENV
        path: .

    - name: Restore $GITHUB_ENV
      run: cat .github_env >> $GITHUB_ENV

    - name: Setup Node.js ${{ env.node_version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.node_version }}
        registry-url: 'https://registry.npmjs.org'

    - name: Install npm dependencies
      run: npm ci

    - name: Build package
      run: npm run build

    - name: Push package to npmjs
      run: |
        cp README.md dist/sage-angular/.
        cd dist/sage-angular
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build-and-publish-doc:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ env.node_version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.node_version }}

    - name: Install dependencies
      run: |
        npm ci
        # npm install -g @angular/cli

    - name: Build sage-angular-demo
      run: ng build sage-angular-demo --configuration production --baseHref="${{ env.gh_pages_url }}/${{ steps.prep.outputs.version }}/demo/"

    - name: Build storybook
      run: npm run build:storybook

    - name: Commit to gh-pages
      run: |
        git clone ${{ env.clone_url }} \
          --branch gh-pages --single-branch gh-pages

        # Update gh-pages: version specified
        STORYBOOK_TARGET_DIR=gh-pages/${{ steps.prep.outputs.version }}/storybook
        mkdir -p ${STORYBOOK_TARGET_DIR}
        cp -R storybook-static/* ${STORYBOOK_TARGET_DIR}
        DEMO_TARGET_DIR=gh-pages/${{ steps.prep.outputs.version }}/demo
        mkdir -p ${DEMO_TARGET_DIR}
        cp -R dist/sage-angular-demo/* ${DEMO_TARGET_DIR}

        # Update gh-pages: latest, major, and minor versions
        if [ ! -z "${{ steps.prep.outputs.version_major }}" ]; then
          # Update major version (e.g. "1.2.3" => "1")
          STORYBOOK_TARGET_DIR=gh-pages/latest/storybook
          mkdir -p ${STORYBOOK_TARGET_DIR}
          cp -R storybook-static/* ${STORYBOOK_TARGET_DIR}
          DEMO_TARGET_DIR=gh-pages/latest/demo
          mkdir -p ${DEMO_TARGET_DIR}
          cp -R dist/sage-angular-demo/* ${DEMO_TARGET_DIR}

          # Update major version (e.g. "1.2.3" => "1")
          STORYBOOK_TARGET_DIR=gh-pages/${{ steps.prep.outputs.version_major }}/storybook
          mkdir -p ${STORYBOOK_TARGET_DIR}
          cp -R storybook-static/* ${STORYBOOK_TARGET_DIR}
          DEMO_TARGET_DIR=gh-pages/${{ steps.prep.outputs.version_major }}/demo
          mkdir -p ${DEMO_TARGET_DIR}
          cp -R dist/sage-angular-demo/* ${DEMO_TARGET_DIR}

          # Update minor version (e.g. "1.2.3" => "1.2")
          STORYBOOK_TARGET_DIR=gh-pages/${{ steps.prep.outputs.version_minor }}/storybook
          mkdir -p ${STORYBOOK_TARGET_DIR}
          cp -R storybook-static/* ${STORYBOOK_TARGET_DIR}
          DEMO_TARGET_DIR=gh-pages/${{ steps.prep.outputs.version_minor }}/demo
          mkdir -p ${DEMO_TARGET_DIR}
          cp -R dist/sage-angular-demo/* ${DEMO_TARGET_DIR}
        fi
        cd gh-pages
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update gh-pages" -a || true
        # The above command will fail if no changes were present, so we ignore
        # that.

    - name: Push changes to gh-pages
      if: env.push_doc == 'true'
      uses: ad-m/github-push-action@master
      with:
        branch: gh-pages
        directory: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true
